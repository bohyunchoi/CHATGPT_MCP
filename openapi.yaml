openapi: 3.1.0
info:
  title: MCP File Tool
  version: 1.0.0
servers:
  - url: https://3on3.ngrok.app
paths:
  /file:
    post:
      summary: 파일을 읽거나 쓰거나 수정하고 실행합니다
      operationId: file_read_write_file_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - action
                - filename
              properties:
                action:
                  type: string
                  enum:
                    - read
                    - write
                    - modify
                filename:
                  type: string
                content:
                  type: string
                find:
                  type: string
                replace:
                  type: string
      responses:
        "200":
          description: 작업 결과 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                  stdout:
                    type: string
                  stderr:
                    type: string
                  execution_time_sec:
                    type: number
  /run-bat:
    post:
      summary: 로컬 bat 파일 실행
      operationId: run_bat_file
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - filename
              properties:
                filename:
                  type: string
      responses:
        "200":
          description: 실행 결과 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                  stdout:
                    type: string
                  stderr:
                    type: string
                  return_code:
                    type: integer
                  duration_sec:
                    type: number
        "404":
          description: 요청된 bat 파일을 찾을 수 없음
        "500":
          description: 서버 내부 오류
  /list-files:
    get:
      summary: 지정된 폴더 내 파일 목록 반환
      operationId: list_files
      parameters:
        - name: folder
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 파일 목록 반환
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "404":
          description: 폴더가 존재하지 않음
  /list-folders:
    get:
      summary: 지정된 폴더 내 서브폴더 목록 반환
      operationId: list_folders
      parameters:
        - name: folder
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: 서브폴더 목록 반환
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "404":
          description: 폴더가 존재하지 않음
  /list-python-files:
    get:
      summary: 지정된 폴더 내 Python(.py) 파일 목록 반환
      operationId: list_python_files
      parameters:
        - name: folder
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Python 파일 목록 반환
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "404":
          description: 폴더가 존재하지 않음
  /read-all-python-files:
    get:
      summary: 지정된 폴더 내 모든 Python 파일 내용 반환
      operationId: read_all_python_files
      parameters:
        - name: folder
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 파일별 내용 반환
          content:
            application/json:
              schema:
                type: object
                properties: {}
                additionalProperties:
                  type: string
        "404":
          description: 폴더가 존재하지 않음
  /upload-to-github:
    post:
      summary: 로컬 파일을 GitHub에 업로드
      operationId: upload_to_github
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - owner
                - repo
                - github_token
                - local_path
                - repo_path
              properties:
                owner:
                  type: string
                repo:
                  type: string
                github_token:
                  type: string
                local_path:
                  type: string
                repo_path:
                  type: string
                branch:
                  type: string
                  default: main
      responses:
        "200":
          description: 업로드 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                  details:
                    type: object
        "401":
          description: GitHub 인증 오류
        "404":
          description: 로컬 파일을 찾을 수 없음
        "500":
          description: 서버 내부 오류
  /delete:
    delete:
      summary: 파일 또는 폴더 삭제
      operationId: delete_file_or_folder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - path
                - type
              properties:
                path:
                  type: string
                type:
                  type: string
                  enum:
                    - file
                    - folder
      responses:
        "200":
          description: 삭제 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
        "404":
          description: 대상 경로가 존재하지 않음
        "500":
          description: 서버 내부 오류
  /query:
    post:
      summary: SQL Server 쿼리 실행 및 결과 반환
      operationId: run_query
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - query
              properties:
                query:
                  type: string
                  description: 실행할 SQL 문의 문자열
      responses:
        "200":
          description: 쿼리 결과 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  rows:
                    type: array
                    items:
                      type: object
        "500":
          description: 쿼리 실행 중 오류
  /db/version:
    get:
      summary: SQL Server 버전 정보 조회
      operationId: get_db_version
      responses:
        "200":
          description: 버전 정보 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: string
        "500":
          description: 서버 내부 오류
  /databases:
    get:
      summary: 서버에 있는 모든 데이터베이스 목록 조회
      operationId: list_databases
      responses:
        "200":
          description: 데이터베이스 이름 배열
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "500":
          description: 서버 내부 오류
  /databases/{database}/schemas:
    get:
      summary: 특정 데이터베이스의 스키마 목록 조회
      operationId: list_schemas
      parameters:
        - name: database
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 스키마 이름 배열
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "404":
          description: 데이터베이스를 찾을 수 없음
        "500":
          description: 서버 내부 오류
  /databases/{database}/tables:
    get:
      summary: 특정 데이터베이스 내 모든 테이블 목록 조회
      operationId: list_tables
      parameters:
        - name: database
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 테이블 이름 배열
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "404":
          description: 데이터베이스를 찾을 수 없음
        "500":
          description: 서버 내부 오류
  /databases/{database}/tables/{table}/columns:
    get:
      summary: 특정 테이블의 컬럼 메타데이터 조회
      operationId: list_columns
      parameters:
        - name: database
          in: path
          required: true
          schema:
            type: string
        - name: table
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 컬럼 메타데이터 배열
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    column_name:
                      type: string
                    data_type:
                      type: string
                    is_nullable:
                      type: boolean
                    character_maximum_length:
                      type: integer
        "404":
          description: 데이터베이스 또는 테이블을 찾을 수 없음
        "500":
          description: 서버 내부 오류
  /send-mail:
    post:
      summary: Send email via SMTP
      operationId: send_mail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - smtp_server
                - username
                - password
                - to
                - subject
                - body
              properties:
                smtp_server:
                  type: string
                smtp_port:
                  type: integer
                  default: 587
                username:
                  type: string
                password:
                  type: string
                to:
                  type: string
                subject:
                  type: string
                body:
                  type: string
      responses:
        "200":
          description: 성공 시 결과
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string

